<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">

    <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:/com/pairoo/backend/db/springBeans-${env}.properties
            </value>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>

    <!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->

    <!-- ActiveObjects SchemaMigrator -->
    <!-- <bean id="dbInitializer" class="com.pairoo.backend.db.ao.SchemaMigrator"
    init-method="init"> <constructor-arg ref="aoEntityManager" /> <constructor-arg
    name="entitiesPackageName" value="com.pairoo.domain.entities" /> </bean> -->

    <!-- The rest of the application (incl. Hibernate) must be run after Flyway
    to ensure the database is compatible with the code -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"
          depends-on="flyway">
        <property name="dataSource" ref="dataSource"></property>
        <property name="configLocation">
            <value>classpath:com/pairoo/backend/db/hibernate/hibernate.cfg.xml
            </value>
        </property>
        <!-- <property name="annotatedClasses"> <list> <value>org.wicketstuff.phonebook.domain.Contact</value>
        </list> </property> -->
        <property name="hibernateProperties" ref="hibernateProperties"></property>
    </bean>

    <!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" /> </bean> -->

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
        <!--class="org.springframework.transaction.jta.JtaTransactionManager">-->
        <property name="sessionFactory" ref="sessionFactory"></property>
        <!--<property name="dataSource" ref="dataSource"/>-->
    </bean>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <util:map id="hibernateProperties" map-class="java.util.Properties"
              key-type="java.lang.String" value-type="java.lang.String">
        <entry key="hibernate.dialect" value="${hibernate.dialect}"></entry>

        <entry key="hibernate.connection.pool_size" value="10"></entry>
        <entry key="hibernate.statement_cache.size" value="10"></entry>

        <!-- Activate new enhanced identifier generators -->
        <entry key="hibernate.id.new_generator_mappings" value="true"></entry>

        <!-- Automatic creation of database schema -->
        <!-- <entry key="hibernate.hbm2ddl.auto" value="create-drop"></entry> -->
        <!-- done now by flyway scripts... -->

        <entry key="hibernate.bytecode.use_reflection_optimizer" value="false"></entry>

        <entry key="hibernate.show_sql" value="false"></entry>
        <entry key="hibernate.format_sql" value="false"></entry>

        <entry key="hibernate.cache.provider_class" value="org.hibernate.cache.EhCacheProvider"></entry>
        <entry key="hibernate.hibernate.cache.use_query_cache" value="true"></entry>

        <!-- Hibernate 4 -->
        <!--<entry key="hibernate.transaction.factory_class" value="org.springframework.transaction.jta.SimpleTransactionFactory"></entry>-->
        <!--        <entry key="hibernate.transaction.factory_class" value="org.hibernate.engine.transaction.internal.jdbc.JdbcTransactionFactory"></entry>
        <entry key="hibernate.current_session_context_class" value="thread"></entry>-->
        <!--<entry key="hibernate.transaction.factory_class" value="org.hibernate.transaction.CMTTransactionFactory"></entry>-->
        <!--<entry key="hibernate.transaction.jta.platform"  value="org.hibernate.service.jta.platform.internal.OC4JJtaPlatform"></entry>-->
    </util:map>

    <!-- setup daos -->
    <bean id="addressDao" class="com.pairoo.backend.db.hibernate.AddressDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="blockedUserDao" class="com.pairoo.backend.db.hibernate.BlockedUserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="favoriteDao" class="com.pairoo.backend.db.hibernate.FavoriteDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="geoAreaDao" class="com.pairoo.backend.db.hibernate.GeoAreaDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="geoLocationDao" class="com.pairoo.backend.db.hibernate.GeoLocationDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="imageEntryDao" class="com.pairoo.backend.db.hibernate.ImageEntryDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="landingPageActionDao"
          class="com.pairoo.backend.db.hibernate.LandingPageActionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="membershipDao" class="com.pairoo.backend.db.hibernate.MembershipDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="messageDao" class="com.pairoo.backend.db.hibernate.MessageDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="paymentChannelDao" class="com.pairoo.backend.db.hibernate.payment.PaymentChannelDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="payoneTransactionDao" class="com.pairoo.backend.db.hibernate.payment.payone.PayOneTransactionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="productDao" class="com.pairoo.backend.db.hibernate.ProductDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="promotionDao" class="com.pairoo.backend.db.hibernate.marketing.PromotionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="subdivisionDao" class="com.pairoo.backend.db.hibernate.SubdivisionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="transactionDao" class="com.pairoo.backend.db.hibernate.payment.TransactionDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="userAccountDao" class="com.pairoo.backend.db.hibernate.UserAccountDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="userDao" class="com.pairoo.backend.db.hibernate.UserDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="userProfileDao" class="com.pairoo.backend.db.hibernate.UserProfileDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="visitDao" class="com.pairoo.backend.db.hibernate.VisitDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <bean id="voucherPaymentDao" class="com.pairoo.backend.db.hibernate.payment.VoucherPaymentDaoImpl">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- <bean id="userAccountDao" class="com.pairoo.backend.db.ao.UserAccountDaoImpl">
    <constructor-arg ref="aoEntityManager" /> </bean> <bean id="aoEntityManager"
    class="net.java.ao.builder.EntityManagerBuilderWithUrlAndUsernameAndPassword">
    <constructor-arg name="url" value="${jdbc.url}"></constructor-arg> <constructor-arg
    name="username" value="${jdbc.username}"></constructor-arg> <constructor-arg
    name="password" value="${jdbc.password}"></constructor-arg> </bean> -->
</beans>
